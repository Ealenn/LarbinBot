name: Docker

on:
  pull_request:
    branches: 
      - master
  push:
    branches: 
      - master
    tags:
      - '*'

jobs:
  buildx:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Prepare
        id: prepare
        run: |
          DOCKER_IMAGE=ealen/larbinbot
          DOCKER_PLATFORMS=linux/amd64,linux/arm/v6,linux/arm/v7
          VERSION=snapshot
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION=$(echo $GITHUB_REF | cut -d / -f 3)
          elif [[ $GITHUB_REF == refs/heads/master ]]; then
            VERSION=latest
          elif [[ $GITHUB_REF == refs/heads/* ]]; then
            VERSION=sandbox
          fi
          TAGS="${DOCKER_IMAGE}:${VERSION}"
          if [[ $VERSION =~ ^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$ ]]; then
            TAGS="${TAGS},${DOCKER_IMAGE}:latest"
          fi

          echo ::set-output name=docker_image::${DOCKER_IMAGE}
          echo ::set-output name=build_date::$(date -u +'%Y-%m-%dT%H:%M:%SZ')
          echo ::set-output name=vcs_ref::${GITHUB_SHA::8}
          echo ::set-output name=version::${VERSION}
          echo ::set-output name=tags::${TAGS}
          echo ::set-output name=platforms::${DOCKER_PLATFORMS}
      -
        name: Set up QEMU
        id: qemu
        uses: docker/setup-qemu-action@v1
        with:
          image: tonistiigi/binfmt:latest
          platforms: all
      -
        name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
        with:
          install: true
      -
        name: Available platforms
        run: echo ${{ steps.buildx.outputs.platforms }}
      -
        name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      -
        name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          push: true
          no-cache: true
          tags: ${{ steps.prepare.outputs.tags }}
          platforms: ${{ steps.prepare.outputs.platforms }}
          build-args:
            VERSION: ${{ steps.prepare.outputs.version }}
            BUILD_DATE: ${{ steps.prepare.outputs.build_date }}
            VCS_REF: ${{ steps.prepare.outputs.vcs_ref }}
      -
        name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
      -
        name: Docker Check Manifest
        run: |
          docker run --rm mplatform/mquery ${{ steps.prepare.outputs.docker_image }}:${{ steps.prepare.outputs.version }}
